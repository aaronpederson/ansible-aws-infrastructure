---
- set_fact:
    security_group_id: "{{ dict() }}"

tasks:
  - include: create/security-group.yml
    vars:
        system_role:
          - management
          - managed
          - inbound
          - application
          - cache
          # - applicationapi
          # - applicationq
          # - database,       when: "'database' in required_systems"
          # - database1      when: "'database1' in required_systems"
          # - database2      when: "'database2' in required_systems"
          # - database3      when: "'database3' in required_systems"
          # - outbound       when: "'outbound' in required_systems"
          # - aggregator,     when: "'aggregator' in required_systems"
          # - logs,           when: "'logs' in required_systems"
          # - client,         when: "'client' in required_systems"
          # - master,         when: "'master' in required_systems"
          # - metrics,        when: "'metrics' in required_systems"
          # - build,          when: "'build' in required_systems"
          # - preview,        when: "'preview' in required_systems"

- name: "No Management, Exposing Managed Systems"
  set_fact:
    security_group: "{{ security_group.update(no_management) }}{{ security_group }}"
  when: "'management' not in required_systems"

- { include: create/security-group.yml, system_role: managed, when: "'management' not in required_systems" }

- name: "No Inbound Proxies, Exposing Application Servers"
  set_fact:
    security_group: "{{ security_group.update(no_inbound) }}{{ security_group }}"
  when: "'inbound' not in required_systems"

- { include: create/security-group.yml, system_role: application,    when: "'inbound' not in required_systems" }
- { include: create/security-group.yml, system_role: applicationapi, when: "'inbound' not in required_systems" }
- { include: create/security-group.yml, system_role: applicationq,   when: "'inbound' not in required_systems" }
